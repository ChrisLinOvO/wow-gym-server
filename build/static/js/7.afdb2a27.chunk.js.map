{"version":3,"sources":["component/employee-from-input/EmployeeFormInput.jsx","component/employee-form-checkbox/EmployeeFormRadio.jsx","component/employee-form-textarea/EmployeeFormTextarea.jsx","pages/employee-form-page/EmployeeFormPage.jsx"],"names":["MyInput","props","value","onChange","title","type","placeholder","required","accept","className","MyCheckBox","onClick","name","MyTextarea","htmlFor","mapStateToProps","createStructuredSelector","currentEmployee","currentEmployeeSelect","withRouter","connect","history","useState","course","setCourse","time","setTime","hour","setHour","file","setFile","explanation","setExplanation","category","setCategory","quota","setQuota","categoryId","a","row","staffId","Eid","courseCategoryId","courseName","categoryName","courseImg","courseIntroduce","courseTime","courseHour","numberOfCourse","courseQuoda","request","Request","method","body","JSON","stringify","headers","Headers","Accept","fetch","response","json","event","target","input","files","reader","FileReader","onload","dataURL","result","readAsDataURL","alt","src","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","push","handleSubmit"],"mappings":"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","file":"static/js/7.afdb2a27.chunk.js","sourcesContent":["import React from 'react'\nimport './EmployeeFormInput.scss'\n\nfunction MyInput(props) {\n    const {value, onChange, title, type, placeholder, required, accept} =props\n    // console.log(props)\n  return (\n    <>\n        <label className=\"label\">\n          {title}\n          <input  placeholder={placeholder} className=\"input\" type={type} value={value} onChange={onChange} required={required} accept={accept} />\n        </label>\n    </>\n  )\n}\nexport default MyInput","import React from 'react'\nimport './EmployeeFormRadio.scss'\n\nfunction MyCheckBox(props) {\n    const {value, onClick, title, required} = props\n    \n  return (\n    <>\n      <label className=\"label-radio\">\n        <input className=\"radio\" name=\"category\" type=\"radio\" value={value} onClick={onClick} required={required}  />\n        <span className=\"span\">{title}</span>\n      </label>\n    </>\n  )\n}\nexport default MyCheckBox","import React from 'react'\nimport './EmployeeFormTextarea.scss'\n\nfunction MyTextarea(props) {\n    const {value, onChange, title, placeholder, required} =props\n    // console.log(props)\n  return (\n    <>\n      <label className=\"label textarea-label\" htmlFor=\"\">\n        {title}\n        <textarea className=\"textarea\" placeholder={placeholder} value={value} onChange={onChange} required={required}></textarea>\n      </label>\n    </>\n  )\n}\nexport default MyTextarea","import React, { useState } from \"react\";\nimport \"./EmployeeFormPage.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\nimport Swal from 'sweetalert2';\n\nimport EmployeeFormInput from \"../../component/employee-from-input/EmployeeFormInput\";\nimport EmployeeFormRadio from \"../../component/employee-form-checkbox/EmployeeFormRadio\";\nimport MyTextarea from \"../../component/employee-form-textarea/EmployeeFormTextarea\";\n\nfunction EmployeeForm({ currentEmployee ,history}) {\n  const [course, setCourse] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [quota, setQuota] = useState(\"\");\n\n  let categoryId = \"\";\n  switch (category) {\n    case \"有氧教室\":\n      categoryId = 2;\n      break;\n    case \"瑜伽教室\":\n      categoryId = 3;\n      break;\n    default:\n      categoryId = 8;\n      break;\n  }\n\n  // console.log(file);\n\n  async function handleSubmit() {\n    const row = {\n      staffId: currentEmployee.Eid,\n      courseCategoryId: categoryId,\n      courseName: course,\n      categoryName: category,\n      courseImg: file,\n      courseIntroduce: explanation,\n      courseTime: time,\n      courseHour: hour,\n      numberOfCourse: 0,\n      courseQuoda: quota,\n    };\n\n    const request = new Request(\"http://localhost:5000/api/courses\", {\n      method: \"POST\",\n      body: JSON.stringify(row),\n      headers: new Headers({\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n\n    const response = await fetch(request);\n    await response.json();\n    // console.log(data);\n\n    // alert(\"課程上傳成功\");\n    // window.location.reload();\n  }\n\n  return (\n    <>\n      <form className=\"form-box\">\n        <EmployeeFormInput\n          title={\"課程名稱：\"}\n          type={\"text\"}\n          placeholder={\"請輸入課程名稱\"}\n          value={course}\n          onChange={(event) => {\n            setCourse(event.target.value);\n          }}\n        />\n        <EmployeeFormInput\n          title={\"開課時間：\"}\n          type={\"datetime-local\"}\n          value={time}\n          onChange={(event) => {\n            setTime(event.target.value);\n          }}\n        />\n        <EmployeeFormInput\n          title={\"課程時數：\"}\n          type={\"number\"}\n          placeholder={\"請選擇課程總時數\"}\n          value={hour}\n          onChange={(event) => {\n            setHour(event.target.value);\n          }}\n        />\n        <EmployeeFormInput\n          title={\"課程名額：\"}\n          type={\"number\"}\n          placeholder={\"請選擇課程上限名額\"}\n          value={quota}\n          onChange={(event) => {\n            setQuota(event.target.value);\n          }}\n        />\n        <MyTextarea\n          title={\"課程說明：\"}\n          placeholder={\"請詳述課程介紹\"}\n          value={explanation}\n          onChange={(event) => {\n            setExplanation(event.target.value);\n          }}\n        />\n        <label className=\"label-category\">\n          課程分類：\n          <span className=\"category-box\">\n            <EmployeeFormRadio\n              title={\"有氧教室\"}\n              value={category}\n              onClick={() => {\n                setCategory(\"有氧教室\");\n              }}\n            />\n            <EmployeeFormRadio\n              title={\"瑜伽教室\"}\n              value={category}\n              onClick={() => {\n                setCategory(\"瑜伽教室\");\n              }}\n            />\n            <EmployeeFormRadio\n              title={\"飛輪教室\"}\n              value={category}\n              onClick={() => {\n                setCategory(\"飛輪教室\");\n              }}\n            />\n          </span>\n        </label>\n        <EmployeeFormInput\n          title={\"課程圖片：\"}\n          type={\"file\"}\n          accept=\".jpg,.png\"\n          onChange={(event) => {\n            let input = event.target.files[0];\n            let reader = new FileReader();\n            reader.onload = function () {\n              let dataURL = reader.result;\n              setFile(dataURL);\n            };\n            reader.readAsDataURL(input);\n          }}\n        />\n        <div className=\"file-box\">\n          <img className=\"file-img\" alt=\"\" src={file} />\n        </div>\n\n        <div>\n          <button\n            className=\"submit\"\n            type=\"button\"\n            onClick={() => {\n              Swal.fire({\n                    title: '新增課程',\n                    text: \"確認欄位已都填寫!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: '確定',\n                    cancelButtonText: '取消'\n                  }).then((result) => {\n                    if (result.value) {\n                      Swal.fire(\n                        '完成!',\n                        '已新增課程!!',\n                        'success'\n                      ).then(() => {\n                        if (result.value) {\n                          history.push(`employeecenter/${currentEmployee.Eid}`);\n                        }\n                      })\n                      handleSubmit();\n                    \n                    }\n                  })\n            }}\n          >\n            送出\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(EmployeeForm));\n"],"sourceRoot":""}