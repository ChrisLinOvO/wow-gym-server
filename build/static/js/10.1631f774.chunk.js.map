{"version":3,"sources":["component/employee-center-modal/employeeCentetModal.jsx","component/employee-center-course-button/EmployeeCenterCourseButton.jsx","pages/employee-center-page/EmployeeCenterPage.jsx"],"names":["mapStateToProps","createStructuredSelector","currentEmployee","currentEmployeeSelect","withRouter","connect","setModashow","itemID","courseid","useState","courseName","setCourseName","courseTime","setCourseTime","courseHour","setCourseHour","courseQuoda","setCourseQuoda","categoryName","setCategoryName","courseImg","setCourseImg","courseData","filter","item","courseId","courseValue","map","className","type","defaultValue","onChange","event","target","value","moment","format","accept","input","files","reader","FileReader","onload","dataURL","result","readAsDataURL","a","row","staffId","Eid","request","Request","method","body","JSON","stringify","headers","Headers","Accept","fetch","response","json","window","location","reload","useEffect","forEach","element","onClick","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","updataCourse","history","modashow","setCourseid","data","getCourseID","handleDelete","employeedata","setEmployeedata","coursedata","setCoursedata","getEmployeeId","getCourse","employeeCapital","Ename","Egender","Ebirthday","EphoneNumber","Eemail","employeeRecord","Elicense","Eexpertise","course","index","key","alt","src","Eimg","replace"],"mappings":"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","file":"static/js/10.1631f774.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport \"./employeeCentetModal.scss\";\nimport moment from \"moment\";\nimport Swal from 'sweetalert2';\n\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\n\nfunction EmployeeCentetModal({\n  currentEmployee,\n  setModashow,\n  itemID,\n  courseid,\n}) {\n  const [courseName, setCourseName] = useState(\"\");\n  const [courseTime, setCourseTime] = useState(\"\");\n  const [courseHour, setCourseHour] = useState(\"\");\n  const [courseQuoda, setCourseQuoda] = useState(\"\");\n  const [categoryName, setCategoryName] = useState(\"\");\n  const [courseImg, setCourseImg] = useState(\"\");\n\n  const courseData = courseid.filter((item) => {\n    return item.courseId === itemID;\n  });\n\n  const courseValue = courseData.map((item) => {\n    return (\n      <>\n        <label className=\"label-content\">\n          課程名稱：\n          <input\n            className=\"input-content\"\n            type=\"text\"\n            defaultValue={item.courseName}\n            onChange={(event) => {\n              setCourseName(event.target.value);\n            }}\n          />\n        </label>\n        <label className=\"label-content\">\n          開課時間：\n          <input\n            className=\"input-content\"\n            type=\"text\"\n            defaultValue={moment(item.courseTime).format(\"YYYY-MM-DD HH:mm\")}\n            onChange={(event) => {\n              setCourseTime(event.target.value);\n            }}\n          />\n        </label>\n        <label className=\"label-content\">\n          課程時數：\n          <input\n            className=\"input-content\"\n            type=\"number\"\n            defaultValue={item.courseHour}\n            onChange={(event) => {\n              setCourseHour(event.target.value);\n            }}\n          />\n        </label>\n        <label className=\"label-content\">\n          人數上限：\n          <input\n            className=\"input-content\"\n            type=\"number\"\n            defaultValue={item.courseQuoda}\n            onChange={(event) => {\n              setCourseQuoda(event.target.value);\n            }}\n          />\n        </label>\n        <label className=\"label-content\">\n          課程分類：\n          <input\n            className=\"input-content\"\n            type=\"text\"\n            defaultValue={item.categoryName}\n            onChange={(event) => {\n              setCategoryName(event.target.value);\n            }}\n          />\n        </label>\n        <label className=\"label-content\">\n          課程圖片：\n          <input\n            className=\"input-content\"\n            type=\"file\"\n            accept=\".jpg,.png\"\n            onChange={(event) => {\n              let input = event.target.files[0];\n              let reader = new FileReader();\n              reader.onload = function () {\n                let dataURL = reader.result;\n                setCourseImg(dataURL);\n              };\n              reader.readAsDataURL(input);\n            }}\n          />\n        </label>\n      </>\n    );\n  });\n\n  //req.body\n  async function updataCourse() {\n      const row = {\n        courseId: itemID,\n        staffId: currentEmployee.Eid,\n        categoryName: categoryName,\n        courseName: courseName,\n        courseTime: courseTime,\n        courseHour: courseHour,\n        courseQuoda: courseQuoda,\n        courseImg: courseImg,\n      };\n\n      //編輯\n      const request = new Request(\n        `https://wow-gym.onrender.com/api/courses/${itemID}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify(row),\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          }),\n        }\n      );\n\n      const response = await fetch(request);\n      await response.json();\n\n      // console.log(\"伺服器回傳的json資料\", data);\n      window.location.reload();\n  }\n\n  //載入\n  useEffect(() => {\n    courseData.forEach((element) => {\n      setCourseName(element.courseName);\n      setCourseTime(moment(element.courseTime).format(\"YYYY-MM-DD HH:mm\"));\n      setCourseHour(element.courseHour);\n      setCourseQuoda(element.courseQuoda);\n      setCategoryName(element.categoryName);\n      setCourseImg(element.courseImg);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"modal-box\">\n      <header className=\"modal-header\">\n        <h1 className=\"modal-title\">課程編輯</h1>\n      </header>\n      <article className=\"modal-body\">{courseValue}</article>\n      <footer className=\"modal-footer\">\n        <button\n          className=\"modal-edit\"\n          onClick={() => {\n            Swal.fire({\n                    title: '編輯課程',\n                    text: \"確認課程是否編輯!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: '確定',\n                    cancelButtonText: '取消'\n                  }).then((result) => {\n                    if (result.value) {\n                      Swal.fire(\n                        '完成!',\n                        '已編輯課程!!',\n                        'success'\n                      )\n                      updataCourse();\n                    \n                    }\n                  })\n          }}\n        >\n          儲存並修改\n        </button>\n        <button\n          className=\"modal-del\"\n          onClick={() => {\n            setModashow(false);\n          }}\n        >\n          關閉視窗\n        </button>\n      </footer>\n    </div>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(EmployeeCentetModal));\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport Swal from 'sweetalert2';\n\nimport EmployeeCentetModal from \"../employee-center-modal/employeeCentetModal\";\n\nfunction CourseButton({ currentEmployee, itemID,history }) {\n  const [modashow, setModashow] = useState(false);\n  const [courseid, setCourseid] = useState(\"\");\n  // const [test,settest]=useState(\"\");\n  //取得\n \n\n  //刪除\n  async function handleDelete() {\n      const request = new Request(\n        `https://wow-gym.onrender.com/api/courses/${itemID}`,\n        {\n          method: \"DELETE\",\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          }),\n        }\n      );\n\n      await fetch(request);\n      //  settest(Math.random()*222)\n      window.location.reload();\n  }\n\n  //載入\n  useEffect(() => {\n    const getCourseID = async()=> {\n      const request = new Request(\n        `https://wow-gym.onrender.com/api/employeecenter/${currentEmployee.Eid}`,\n        {\n          method: \"GET\",\n          headers: new Headers({\n            Accept: \"application/json\",\n            \"Content-Type\": \"appliaction/json\",\n          }),\n        }\n      );\n      const response = await fetch(request);\n      const data = await response.json();\n      setCourseid(data);\n    }\n    getCourseID();\n  }, [currentEmployee.Eid]);\n\n  //改變\n  useEffect(() => {\n    setCourseid(courseid);\n  }, [courseid]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"course-edit\"\n        onClick={() => {\n          setModashow(true);\n        }}\n      >\n        <FaEdit />\n      </button>\n      <button\n        type=\"button\"\n        className=\"course-delete\"\n        onClick={() => {\n          Swal.fire({\n                    title: '刪除課程',\n                    text: \"確認課程是否刪除!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: '確定',\n                    cancelButtonText: '取消'\n                  }).then((result) => {\n                    if (result.value) {\n                      Swal.fire(\n                        '完成!',\n                        '已刪除課程!!',\n                        'success'\n                      )\n                      handleDelete();\n                    \n                    }\n                  })\n          \n        }}\n      >\n        <FaTrashAlt />\n      </button>\n      {modashow && (\n        <EmployeeCentetModal\n          modashow={modashow}\n          setModashow={setModashow}\n          itemID={itemID}\n          courseid={courseid}\n          setCourseid={setCourseid}\n        />\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(CourseButton));","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./EmployeeCenterPage.scss\";\nimport { withRouter } from \"react-router\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\n\nimport CourseButton from \"../../component/employee-center-course-button/EmployeeCenterCourseButton\";\nimport { createStructuredSelector } from \"reselect\";\nimport { currentEmployeeSelect } from \"../../redux/employee/employee-selector\";\n\nfunction EmployeeCenter({ currentEmployee }) {\n  const [employeedata, setEmployeedata] = useState([]);\n  const [coursedata, setCoursedata] = useState([]);\n\n  async function getEmployeeId() {\n    // console.log(currentEmployee);\n    const request = new Request(\n      `https://wow-gym.onrender.com/api/employee/${currentEmployee.Eid}`,\n      {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"appliaction/json\",\n        }),\n      }\n    );\n\n    const response = await fetch(request);\n    const data = await response.json();\n    setEmployeedata(data);\n  }\n\n  async function getCourse() {\n    const request = new Request(\n      `https://wow-gym.onrender.com/api/employeecenter/${currentEmployee.Eid}`,\n      {\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"appliaction/json\",\n        }),\n      }\n    );\n\n    const response = await fetch(request);\n    const data = await response.json();\n    setCoursedata(data);\n  }\n\n  //載入\n  useEffect(() => {\n    getEmployeeId();\n    getCourse();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  //改變\n  useEffect(() => {\n    setEmployeedata(employeedata);\n  }, [employeedata]);\n\n  useEffect(() => {\n    setCoursedata(coursedata);\n    // console.log(coursedata);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [coursedata]);\n\n  const employeeCapital = employeedata.map((item) => {\n    return (\n      <>\n        <p className=\"data\">姓名：{item.Ename}</p>\n        <p className=\"data\">性別：{item.Egender}</p>\n        <p className=\"data\">\n          生日：<Moment format=\"YYYY/MM/DD\">{item.Ebirthday}</Moment>\n        </p>\n        <p className=\"data\">電話：{item.EphoneNumber}</p>\n        <p className=\"data\">email：{item.Eemail}</p>\n      </>\n    );\n  });\n\n  const employeeRecord = employeedata.map((item) => {\n    return (\n      <>\n        <h1 className=\"license-title\">專長：</h1>\n        <p className=\"license\">{item.Elicense}</p>\n        <h1 className=\"license-title\">證照：</h1>\n        <p className=\"license\">{item.Eexpertise}</p>\n      </>\n    );\n  });\n\n  const course = coursedata.map((item, index) => {\n    return (\n      <>\n        <div className=\"course\" key={index}>\n          <div className=\"course-container-img\">\n            <img className=\"course-img\" alt=\"\" src={item.courseImg} />\n          </div>\n          <h3 className=\"coursename\">{item.courseName}</h3>\n          <div>\n            <Moment format=\"YYYY-MM-DD HH:mm\">{item.courseTime}</Moment>\n          </div>\n          <CourseButton itemID={item.courseId} />\n        </div>\n      </>\n    );\n  });\n\n  return (\n    <>\n      <div className=\"employeeCenterPage\">\n        <div className=\"center-box\">\n          <div className=\"center-top\">\n            <div className=\"centertop-box\">\n                <figcaption className=\"centerpeople-box-top\">\n                  <img\n                    className=\"people-top\"\n                    alt=\"\"\n                    src={currentEmployee.Eimg}\n                  />\n                  <figure className=\"centerpeople-content-top\">\n                    <h1 className=\"top-title\">{currentEmployee.Ename}</h1>\n                  </figure>\n                </figcaption>\n              <button\n                className=\"addcourse\"\n                onClick={() => {\n                  window.location.replace(\"https://wow-gym.onrender.com/employeeform\");\n                }}\n              >\n                課程上傳\n              </button>\n            </div>\n          </div>\n          <div className=\"box\">\n            <div className=\"left\">\n              <div className=\"left-box\">{course}</div>\n            </div>\n            <div className=\"right\">\n              <figcaption className=\"people-box-right\">\n                <img\n                  className=\"people-right\"\n                  alt=\"\"\n                  src={currentEmployee.Eimg}\n                />\n                <figure className=\"people-content-right\">\n                  <h1 className=\"right-title\">{currentEmployee.Ename} 教練</h1>\n                </figure>\n              </figcaption>\n              <div className=\"data-box\">\n                <div className=\"data\">{employeeCapital}</div>\n                <div className=\"expertise\">{employeeRecord}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentEmployee: currentEmployeeSelect,\n});\n\nexport default withRouter(connect(mapStateToProps)(EmployeeCenter));"],"sourceRoot":""}