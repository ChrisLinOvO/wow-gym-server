{"version":3,"sources":["component/form-input/Form-input.jsx","component/employee-sign-in/Employee-sign-in.jsx","pages/employee-sign-in-out-page/employee-sign-in-out-page.jsx"],"names":["FormInput","handleChange","label","type","otherProps","className","onChange","required","value","length","EmployeeSignIn","state","email","password","handleSubmit","e","a","preventDefault","props","employeeList","employeeLogin","history","currentEmployee","find","employee","Eemail","Epwd","console","log","push","Eid","alert","target","name","setState","onSubmit","this","React","Component","mapStateToProps","createStructuredSelector","employeeListSelect","withRouter","connect","dispatch","EmployeeSignInOutPage"],"mappings":"qJAyBeA,IArBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAASC,EAAjC,sDAChB,yBAAKC,UAAU,SACb,yCACEC,SAAUL,GACNG,EAFN,CAGEC,UAAU,aACVF,KAAMA,EACNI,UAAQ,KAETL,EACC,2BACEG,UAAS,UACPD,EAAWI,MAAMC,OAAS,SAAW,GAD9B,sBAIRP,GAED,Q,oPCTFQ,G,mNACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,a,uCAAe,WAAOC,GAAP,6BAAAC,EAAA,sDACbD,EAAEE,iBADW,EAEe,EAAKN,MAAzBC,EAFK,EAELA,MAAOC,EAFF,EAEEA,SAFF,EAGoC,EAAKK,MAA9CC,EAHK,EAGLA,aAAcC,EAHT,EAGSA,cAAeC,EAHxB,EAGwBA,QAE/BC,EAAkBH,EAAaI,MACnC,SAACC,GAAD,OAAcA,EAASC,SAAWb,GAASY,EAASE,OAASb,KAE/Dc,QAAQC,IAAIN,GACRA,GACFF,EAAcE,GACdD,EAAQQ,KAAR,0BAAgCP,EAAgBQ,OAEhDC,MAAM,4BAbK,2C,wDAiBf9B,aAAe,SAACc,GAAO,IAAD,EACIA,EAAEiB,OAAlBC,EADY,EACZA,KAAMzB,EADM,EACNA,MACd,EAAK0B,SAAL,eAAiBD,EAAOzB,K,uDAIxB,OACE,yBAAKH,UAAU,WACb,wBAAIA,UAAU,eAAd,oDACA,qFACA,0BAAM8B,SAAUC,KAAKtB,cACnB,kBAAC,IAAD,CACEmB,KAAK,QACLzB,MAAO4B,KAAKzB,MAAMC,MAClBN,SAAU8B,KAAKnC,aACfC,MAAM,QACNK,UAAQ,IAGV,kBAAC,IAAD,CACE0B,KAAK,WACLzB,MAAO4B,KAAKzB,MAAME,SAClBP,SAAU8B,KAAKnC,aACfC,MAAM,WACNC,KAAK,WACLI,UAAQ,IAEV,yBAAKF,UAAU,iBACb,kBAAC,IAAD,CAAcF,KAAK,UAAnB,uB,GAnDiBkC,IAAMC,YA2D7BC,EAAkBC,YAAyB,CAC/CrB,aAAcsB,MAODC,cACbC,YAAQJ,GALiB,SAACK,GAAD,MAAe,CACxCxB,cAAe,SAACI,GAAD,OAAcoB,EAASxB,YAAcI,QAIpDmB,CAA6CjC,I,OClEhCmC,UARe,kBAC5B,oCACA,yBAAKxC,UAAU,iCACb,kBAAC,EAAD","file":"static/js/8.b7cd25da.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./form-input.scss\";\n\nconst FormInput = ({ handleChange, label, type, ...otherProps }) => (\n  <div className=\"group\">\n    <input\n      onChange={handleChange}\n      {...otherProps}\n      className=\"form-input\"\n      type={type}\n      required\n    />\n    {label ? (\n      <label\n        className={`${\n          otherProps.value.length ? \"shrink\" : \"\"\n        } form-input-label`}\n      >\n        {label}\n      </label>\n    ) : null}\n  </div>\n);\n\nexport default FormInput;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport FormInput from \"../form-input/Form-input\";\nimport CustomButton from \"../custom-button/Custom-button\";\nimport { employeeLogin } from \"../../redux/employee/employee-action\";\nimport { employeeListSelect } from \"../../redux/employee/employee-selector\";\n\nimport \"./sign-in.scss\";\n\nclass EmployeeSignIn extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const { employeeList, employeeLogin, history } = this.props;\n\n    const currentEmployee = employeeList.find(\n      (employee) => employee.Eemail === email && employee.Epwd === password\n    );\n    console.log(currentEmployee)\n    if (currentEmployee) {\n      employeeLogin(currentEmployee);\n      history.push(`/employeecenter/${currentEmployee.Eid}`);\n    } else {\n      alert(\"Wrong email or password!\");\n    }\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"sign-in\">\n        <h2 className=\"title-login\">教練員工帳號登入</h2>\n        <span>輸入帳號 & 密碼登入</span>\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n\n          <FormInput\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            type=\"password\"\n            required\n          />\n          <div className=\"buttons-login\">\n            <CustomButton type=\"submit\">登入</CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  employeeList: employeeListSelect,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  employeeLogin: (employee) => dispatch(employeeLogin(employee)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(EmployeeSignIn)\n);","import React from \"react\";\n\nimport EmployeeSignIn from \"../../component/employee-sign-in/Employee-sign-in\";\n\nimport \"./employee-sign-in-out-page.scss\";\n\nconst EmployeeSignInOutPage = () => (\n  <>\n  <div className=\"Employee-sign-in-and-sign-out\">\n    <EmployeeSignIn />\n  </div>\n  </>\n);\n\nexport default EmployeeSignInOutPage;"],"sourceRoot":""}